@if (ViewBag.Role == "user" || ViewBag.isLoggedIn == false)
{
    Layout = "~/Views/Shared/_LayoutUser.cshtml";

}
else if (ViewBag.Role == "officer")
{
    Layout = "~/Views/Shared/_LayoutOfficer.cshtml";

}
<div class="page-section">
    <div class="container page__container">
        <div class="page-separator">
            <div class="page-separator__text">Nearest Libraries</div>
        </div>
        <div id="map"></div>
        <div class="js-nearest-libraries-list-wrapper" style="min-height:50px"></div>
    </div>
</div>



@section styles{
    <style type="text/css">
        #map {
            height: 500px;
        }

        .custom-map-control-button {
            background-color: #fff;
            border: 0;
            border-radius: 2px;
            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
            margin: 10px;
            padding: 0 0.5em;
            font: 400 18px Roboto, Arial, sans-serif;
            overflow: hidden;
            height: 40px;
            cursor: pointer;
        }

            .custom-map-control-button:hover {
                background: #ebebeb;
            }
    </style>
}


@section scripts{
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBsjjJ4vFAfRgBNUxx0_Zf2pnnS8sYM-jc&callback=initMap&v=weekly"
            async></script>
    <script type="text/javascript">

        let map, infoWindow;

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 40.9801, lng: 29.0823 },
                zoom: 12,
            });
            infoWindow = new google.maps.InfoWindow();

            const locationButton = document.createElement("button");

            locationButton.textContent = "Pan to Current Location";
            locationButton.classList.add("custom-map-control-button");
            map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
            locationButton.addEventListener("click", () => {
                // Try HTML5 geolocation.
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        (position) => {
                            const pos = {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude,
                            };

                            $.post("/Home/_NearestLibraries", { currentLocation: pos.lat.toString() + "," + pos.lng.toString() }, function (res) {
                                $('.js-nearest-libraries-list-wrapper').html(res);
                            });

                            $("#currentLocation").val(pos.lat.toString() + "," + pos.lng.toString());
                            infoWindow.setPosition(pos);
                            infoWindow.setContent("Location found.");
                            infoWindow.open(map);
                            map.setCenter(pos);
                        },
                        () => {
                            handleLocationError(true, infoWindow, map.getCenter());
                        }
                    );
                } else {
                    // Browser doesn't support Geolocation
                    handleLocationError(false, infoWindow, map.getCenter());
                }
            });
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);


            infoWindow.setContent(
                browserHasGeolocation
                    ? "Error: The Geolocation service failed."
                    : "Error: Your browser doesn't support geolocation."
            );
            infoWindow.open(map);
        }
    </script>

}
